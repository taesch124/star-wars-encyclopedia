{"version":3,"sources":["Components/NavBar/NavBar.js","Components/Welcome/Welcome.js","Components/Lists/InfiniteList.js","Components/Message/Message.js","Components/MasterDetail/MasterDetailContainer.js","Components/Planets/PlanetPanel.js","Components/Planets/PlanetListItem.js","Components/Planets/PlanetContainer.js","Components/Starships/StarshipListItem.js","Components/Starships/StarshipPanel.js","Components/Starships/StarshipContainer.js","Components/Vehicles/VehiclePanel.js","Components/Lists/SimpleListItem.js","Components/Vehicles/VehicleContainer.js","Components/Species/SpeciesPanel.js","Components/Species/SpeciesContainer.js","Components/People/PeoplePanel.js","Components/People/PeopleContainer.js","App.js","serviceWorker.js","index.js"],"names":["toggleNavbar","e","document","getElementById","classList","contains","target","id","remove","add","withRouter","props","route","links","getElementsByClassName","i","length","current","replace","concat","link","highlightSelected","location","pathname","react_default","a","createElement","className","onClick","src","process","alt","react_router_dom","to","Welcome","InfiniteList","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","getNextItems","url","axios","get","then","response","newList","toConsumableArray","state","itemList","data","results","console","log","setState","nextItemsUrl","next","endOfList","listLoaded","catch","error","trackScrolling","wrappedElement","isBottom","startingUrl","addEventListener","removeEventListener","_this2","ListItemComponent","listItemComponent","map","item","key","selectItem","el","getBoundingClientRect","bottom","window","innerHeight","Component","Message","message","MasterDetailContainer","itemUrl","currentPanel","clearSelected","currentTarget","toggleDetails","selectedItem","lastScrollPosition","scrollY","setScrollPosition","scrollTo","deselectItem","panel","listItems","selectedItemUrl","PanelComponent","panelComponent","Components_Lists_InfiniteList","Message_Message","terrainList","mountain","mountains","grasslands","grassy","grass","plains","verdant","tundra","glaciers","swamp","swamps","gas","rainforests","forests","jungle","jungles","cityscape","urban","ocean","asteroid","savanna","savannas","islands","volcanoes","ash","desert","deserts","rocky","getPrimaryTerrain","terrains","classString","split","some","terrain","PlanetPanel","planetData","name","climate","surface_water","diameter","rotation_period","orbital_period","population","gravity","PlanetListItem","planet","PlanetContainer","Components_MasterDetail_MasterDetailContainer","assign","StarshipListItem","starship","companiesList","Kuat","Sienar","Corellian","Imperial","Koensayr","Incom","Calamari","Slayne","Korpil","Theed","Rendili","Gallofree","Hoersch-Kessel","Kessel","Rothana","Huppla","StarshipPanel","starshipData","company","companies","getCompany","manufacturer","model","starship_class","crew","passengers","hyperdrive_rating","cargo_capacity","StarshipContainer","Corellia","SoroSuub","Bespin","VehiclePanel","vehicle","vehicle_class","max_atmosphering_speed","VehicleContainer","SimpleListItem","formatSpeciesName","original","species","SpeciesPanel","speciesData","classification","designation","average_height","average_lifespan","eye_colors","hair_colors","skin_colors","language","homeworld","SpeciesContainer","PeoplePanel","person","birth_year","eye_color","gender","height","mass","skin_color","PeopleContainer","App","Components_NavBar_NavBar","react_router","exact","path","render","Components_Welcome_Welcome","Planets_PlanetContainer","Starships_StarshipContainer","Vehicles_VehicleContainer","Species_SpeciesContainer","People_PeopleContainer","Boolean","hostname","match","ReactDOM","src_App","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ad523cd9.chunk.js","sourcesContent":["import React from 'react';\r\nimport {Link, withRouter} from 'react-router-dom';\r\nimport './NavBar.scss';\r\n\r\nfunction NavBar(props) {\r\n    const currentPath = props.location.pathname;\r\n    highlightSelected(currentPath);\r\n    return (\r\n        <div id=\"navbar-content\" className=\"navbar\">\r\n            <div id=\"navbar-open\" onClick={toggleNavbar}>\r\n                <div className=\"navbar-shrink\">\r\n                    <img className=\"icon navbar-button\" src={process.env.PUBLIC_URL + \"/assets/images/icons/left-arrow.png\"} alt=\"Shrink Navbar\" onClick={toggleNavbar}></img>\r\n                </div>\r\n\r\n                <div className=\"navbar-links\">\r\n                    <Link to=\"/planets\">\r\n                        <div id=\"planets-link\" className={`navbar-link`}>\r\n                            <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/icons/planet-icon.png\"} alt=\"Planets icon\"/>\r\n                            <h4>Planets</h4>\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <Link to=\"/starships\">\r\n                        <div id=\"starships-link\" className={`navbar-link`}>\r\n                            <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/icons/starship-icon.png\"} alt=\"Starships icon\" />\r\n                            <h4>Starships</h4>\r\n                        </div>\r\n                    </Link>\r\n                    \r\n                    <Link to=\"/vehicles\">\r\n                        <div id=\"vehicles-link\" className={`navbar-link`}>\r\n                            <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/icons/speeder-icon.png\"} alt=\"Vehicles icon\" />\r\n                            <h4>Vehicles</h4>\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <Link to=\"/species\">\r\n                        <div id=\"species-link\" className={`navbar-link`}>\r\n                            <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/icons/species-icon.png\"} alt=\"Species icon\" />\r\n                            <h4>Species</h4>\r\n                        </div>\r\n                    </Link>\r\n\r\n                    <Link to=\"/people\">\r\n                        <div id=\"people-link\" className={`navbar-link`}>\r\n                            <img className=\"icon\" src={process.env.PUBLIC_URL + \"/assets/images/icons/people-icon.png\"} alt=\"People icon\" />\r\n                            <h4>People</h4>\r\n                        </div>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n            <div id=\"navbar-closed\" className=\"hidden\">\r\n                <img id=\"navbar-expand\" className=\"icon navbar-button\" src={process.env.PUBLIC_URL + '/assets/images/icons/hamburger.png'} alt=\"Hanburger icon\" onClick={toggleNavbar} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction toggleNavbar(e) {\r\n    if(!document.getElementById('navbar-content').classList.contains('navbar-hidden')) {\r\n        document.getElementById('navbar-content').classList.add('navbar-hidden');\r\n        document.getElementById('navbar-closed').classList.remove('hidden');\r\n        document.getElementById('navbar-open').classList.add('hidden');\r\n    } else if (e.target.id === \"navbar-expand\"){\r\n        document.getElementById('navbar-content').classList.remove('navbar-hidden');\r\n        document.getElementById('navbar-open').classList.remove('hidden');\r\n        document.getElementById('navbar-closed').classList.add('hidden');\r\n    }\r\n}\r\n\r\nfunction highlightSelected(route) {\r\n    let links = document.getElementsByClassName('navbar-link');\r\n    for(let i = 0; i < links.length; i++) {\r\n        let current = links[i];\r\n        current.classList.remove('link-selected');\r\n    }\r\n    route = route.replace('/', '').concat('-link');\r\n    let link = document.getElementById(route);\r\n    if(link) link.classList.add('link-selected');\r\n\r\n}\r\n\r\nexport default withRouter(NavBar);","import React from 'react';\r\n\r\nimport './Welcome.scss';\r\n\r\nfunction Welcome(props) {\r\n    return (\r\n        <div className=\"welcome-message\">\r\n            <h3>Star Wars Encyclopedia</h3>\r\n            <p>Welcome to the Star Wars Encyclopedia, which allows you to search all information on the Star Wars API.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Welcome;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nimport './InfiniteList.scss';\r\n\r\nclass InfiniteList extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            itemList: [],\r\n            nextItemsUrl: '',\r\n            endOfList: false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getNextItems(this.props.startingUrl);\r\n        let wrapper = document.getElementById('master-container');\r\n        wrapper.addEventListener('scroll', this.trackScrolling);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        let wrapper = document.getElementById('master-container');\r\n        wrapper.removeEventListener('scroll', this.trackScrolling)\r\n    }\r\n    \r\n    render() {\r\n        const ListItemComponent = this.props.listItemComponent;\r\n        return (\r\n            <div id=\"master-list\" className=\"list infinite-list\">\r\n                <ul className=\"infinite-list-group\">\r\n                    {this.state.itemList.length > 0 ?\r\n                    this.state.itemList.map(item => {\r\n                        return (\r\n                            <ListItemComponent\r\n                                key={item.url}\r\n                                item={item}\r\n                                selectItem={this.props.selectItem}\r\n                            />\r\n                        )\r\n                    }) :\r\n                    <div className=\"list-loading\">\r\n                        <img className=\"loading-icon\" src={process.env.PUBLIC_URL + '/assets/images/loaders/circle-loader.gif'} alt=\"Loading icon\" />\r\n                    </div>}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    getNextItems = (url) => {\r\n        axios.get(url)\r\n        .then(response => {\r\n            let newList = [...this.state.itemList, ...response.data.results];\r\n            console.log(newList);\r\n            this.setState({\r\n                itemList: newList,\r\n                nextItemsUrl: response.data.next,\r\n                endOfList: false,\r\n            }, () => {\r\n                this.props.listLoaded();\r\n            });\r\n        })\r\n        .catch(error => {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    trackScrolling = (e) => {\r\n        let wrappedElement = document.getElementById('master-list');\r\n        if(this.isBottom(wrappedElement) && !this.state.endOfList) {\r\n            this.setState({\r\n                endOfList: true\r\n            }, () => {\r\n                if(this.state.nextItemsUrl) this.getNextItems(this.state.nextItemsUrl);\r\n            });\r\n        }\r\n    }\r\n\r\n    isBottom(el) {\r\n        return el.getBoundingClientRect().bottom <= window.innerHeight;\r\n    }\r\n}\r\n\r\nexport default InfiniteList;","import React from 'react';\r\n\r\nfunction Message(props) {\r\n\r\n    return (\r\n        <div className=\"message-container\">\r\n            <p className=\"message\">{props.message}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React, {Component} from 'react';\r\nimport axios from 'axios';\r\n\r\n//Models\r\nimport InfiniteList from './../Lists/InfiniteList';\r\nimport Message from './../Message/Message';\r\n\r\n//CSS\r\nimport './MasterDetailContainer.scss';\r\n\r\nclass MasterDetailContainer extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedItemUrl: '',\r\n            selectedItem: null,\r\n            lastScrollPosition: -1\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const PanelComponent = this.props.panelComponent;\r\n        return (\r\n            <div className=\"master-detail-container\">\r\n                <div id=\"master-container\">\r\n                <InfiniteList\r\n                    startingUrl={this.props.startingUrl}\r\n                    selectedItem={this.state.selectedItem}\r\n                    listItemComponent={this.props.listItemComponent}\r\n                    selectItem={this.selectItem}\r\n                    listLoaded={this.setScrollPosition}\r\n                />\r\n                </div>\r\n                <div id=\"detail-container\">\r\n                    {this.state.selectedItem ?\r\n                    <PanelComponent \r\n                        item={this.state.selectedItem}\r\n                        toggleDetails={this.toggleDetails}\r\n                        deselectItem={this.deselectItem}\r\n                    />\r\n                    :\r\n                    <Message\r\n                        message=\"This isn't the droid you're looking for.\"\r\n                    />\r\n                    }\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n\r\n    selectItem = (e, itemUrl) => {\r\n        let currentPanel = document.getElementById('selected-item');\r\n        this.clearSelected();\r\n        e.currentTarget.classList.add('selected');\r\n        axios.get(itemUrl)\r\n        .then(response => {\r\n            \r\n            if(currentPanel && currentPanel.classList.contains('flip')) this.toggleDetails();\r\n            this.setState({\r\n                selectedItem: response.data,\r\n                lastScrollPosition: window.scrollY\r\n            })\r\n        })\r\n        .catch(error => {\r\n            console.error(error);\r\n        });\r\n    }\r\n\r\n    setScrollPosition = () => {\r\n        if(this.state.lastScrollPosition >= 0) {\r\n            window.scrollTo(0, this.state.lastScrollPosition);\r\n        }\r\n    }\r\n\r\n    deselectItem = () => {\r\n        console.log(this.state.lastScrollPosition)\r\n        this.setState({\r\n            selectedItem: null,\r\n        });\r\n    }\r\n\r\n    toggleDetails = (e) => {\r\n        let panel = document.getElementById('selected-item');\r\n\r\n        if(panel.classList.contains('flip')) {\r\n            panel.classList.remove('flip');\r\n        } else {\r\n            panel.classList.add('flip');\r\n        }\r\n        \r\n    }\r\n\r\n    clearSelected = () => {\r\n        let listItems = document.getElementsByClassName('list-item');\r\n\r\n        for(let i = 0; i < listItems.length; i++) {\r\n            let item = listItems[i];\r\n            if(item.classList.contains('selected')) item.classList.remove('selected');\r\n        }\r\n\r\n    }\r\n}\r\n\r\nexport default MasterDetailContainer;","import React from 'react';\r\n\r\nimport './PlanetPanel.scss';\r\n\r\n//'jungle' 'grasslands' 'tundra' 'swamp' 'gas' 'forests' 'cityscape' 'ocean' 'mountains'\r\n\r\nconst terrainList = {\r\n    'mountain': 'mountains',\r\n    'mountains': 'mountains',\r\n    'grasslands': 'grasslands',\r\n    'grassy': 'grasslands',\r\n    'grass': 'grasslands',\r\n    'plains': 'grasslands',\r\n    'verdant': 'grasslands',\r\n    'tundra': 'tundra',\r\n    'glaciers': 'tundra',\r\n    'swamp': 'swamp',\r\n    'swamps': 'swamp',\r\n    'gas': 'gas',\r\n    'rainforests': 'forests',\r\n    'forests': 'forests',\r\n    'jungle': 'jungle',\r\n    'jungles': 'jungle',\r\n    'cityscape': 'cityscape',\r\n    'urban': 'cityscape',\r\n    'ocean': 'ocean',\r\n    'asteroid': 'asteroid',\r\n    'savanna': 'savanna',\r\n    'savannas': 'savanna',\r\n    'islands': 'islands',\r\n    'volcanoes': 'volcanoes',\r\n    'ash': 'volcanoes',\r\n    'desert': 'desert',\r\n    'deserts': 'desert',\r\n    'rocky': 'rocky'\r\n};\r\n\r\nfunction PlanetPanel (props) {\r\n    let planetData = props.item;\r\n    return (\r\n        <div className='panel planet-panel' id='selected-item'>\r\n            \r\n            <div className={`front ${getPrimaryTerrain(planetData.terrain)}`}>\r\n                <div className=\"menu\">\r\n                    <button onClick={props.deselectItem}>Back</button>\r\n                    <button onClick={props.toggleDetails}>Flip</button>\r\n                </div>\r\n                <div className=\"front-content\">\r\n                    <h2 className=\"planet-name-front\">{planetData.name}</h2>\r\n                </div>\r\n            </div>\r\n            <div className='back'>\r\n                <div className=\"menu\">\r\n                    <button onClick={props.deselectItem}>Back</button>\r\n                    <button onClick={props.toggleDetails}>Flip</button>\r\n                </div>\r\n                <div className=\"back-content\">\r\n                    <h5>{planetData.name}</h5>\r\n                    <p>Terrain: {planetData.terrain}</p>\r\n                    <p>Climate: {planetData.climate}</p>\r\n                    <p>Surface Water: {planetData.surface_water}%</p>\r\n                    <p>Diameter: {planetData.diameter}km</p>\r\n                    <p>Day Length:{planetData.rotation_period} hours</p>\r\n                    <p>Year Length: {planetData.orbital_period} days</p>\r\n                    <p>Population: {planetData.population}</p>\r\n                    <p>Gravity: {planetData.gravity} G</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getPrimaryTerrain(terrains) {\r\n    let classString = '';\r\n\r\n    terrains.split(/, | /).some(terrain => {\r\n        console.log(terrain, terrainList[terrain]);\r\n        if(terrainList[terrain]) {\r\n            classString = terrainList[terrain];\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    return classString;\r\n}\r\n\r\nexport default PlanetPanel;","import React from 'react';\r\nimport './PlanetListItem.scss';\r\n\r\nfunction PlanetListItem(props) {\r\n    let planet = props.item;\r\n    return (\r\n        <div onClick={e => props.selectItem(e, planet.url)} className=\"list-item\">\r\n            <h3 >{planet.name}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PlanetListItem;","import React from 'react';\r\n\r\n//Mpdels\r\nimport MasterDetailContainer from './../MasterDetail/MasterDetailContainer';\r\nimport PlanetPanel from './PlanetPanel';\r\nimport PlanetListItem from './PlanetListItem';\r\n\r\n//CSS\r\n\r\nfunction PlanetContainer(props) {\r\n    return (\r\n        <MasterDetailContainer\r\n            {...props}\r\n            startingUrl=\"https://swapi.co/api/planets\"\r\n            panelComponent={PlanetPanel}\r\n            listItemComponent={PlanetListItem}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PlanetContainer;","import React from 'react';\r\nimport './../Lists/ListItem.scss';\r\n\r\nfunction StarshipListItem(props) {\r\n    let starship = props.item;\r\n    return (\r\n        <div key={starship.url} onClick={e => props.selectItem(e, starship.url)} className=\"list-item\">\r\n            <h3 >{starship.name}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StarshipListItem;","import React from 'react';\r\n\r\nimport './StarshipPanel.scss';\r\n\r\nconst companiesList = {\r\n    'Kuat': 'kuat',\r\n    'Sienar': 'sienar',\r\n    'Corellian': 'corellia',\r\n    'Imperial': 'imperial',\r\n    'Koensayr': 'koensayr',\r\n    'Incom': 'incom',\r\n    'Calamari': 'mon-calamari',\r\n    'Slayne': 'slayn-korpil',\r\n    'Korpil': 'slayn-korpil',\r\n    'Theed': 'theed',\r\n    'Rendili': 'rendili',\r\n    'Gallofree': 'gallofree',\r\n    'Hoersch-Kessel': 'hoersch-kessel',\r\n    'Kessel': 'hoersch-kessel',\r\n    'Rothana': 'rothana',\r\n    'Huppla': 'huppla-pasa'\r\n};\r\n\r\nfunction StarshipPanel (props) {\r\n    let starshipData = props.item;\r\n    let company = getCompany(starshipData.manufacturer);\r\n    return (\r\n        <div className='panel starship-panel' id='selected-item'>\r\n            \r\n            <div className={`front`}>\r\n                <div className=\"menu\">\r\n                    <button onClick={props.deselectItem}>Back</button>\r\n                    <button onClick={props.toggleDetails}>Flip</button>\r\n                </div>\r\n                <div className=\"front-content\">\r\n                    {company !== '' ?\r\n                        <img \r\n                            className=\"company-logo\" \r\n                            src={process.env.PUBLIC_URL + '/assets/images/company-logos/' + company + '.png'} \r\n                            alt=\"Company logo\" \r\n                        /> :\r\n                        null\r\n                    }\r\n                    <h2 className=\"starship-name-front\">{starshipData.name}</h2>\r\n                </div>\r\n            </div>\r\n            <div className={`back`}>\r\n                <div className=\"menu\">\r\n                    <button onClick={props.deselectItem}>Back</button>\r\n                    <button onClick={props.toggleDetails}>Flip</button>\r\n                </div>\r\n                <div className=\"back-content\">\r\n                    <h5>{starshipData.name}</h5>\r\n                    <p>Model: {starshipData.model}</p>\r\n                    <p>Class: {starshipData.starship_class}</p>\r\n                    <p>Manufacturer: {starshipData.manufacturer}</p>\r\n                    <p>Length: {starshipData.length}m</p>\r\n                    <p>Crew: {starshipData.crew} poeple</p>\r\n                    <p>Passengers: {starshipData.passengers} people</p>\r\n                    <p>Hyperdrive Rating: {starshipData.hyperdrive_rating}</p>\r\n                    <p>Cargo Capacity: {starshipData.cargo_capacity} kg</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getCompany(companies) {\r\n    let classString = '';\r\n\r\n    companies.split(/, | /).some(company => {\r\n        if(companiesList[company]) {\r\n            classString = companiesList[company];\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    return classString;\r\n}\r\n\r\nexport default StarshipPanel;","import React from 'react';\r\n\r\nimport MasterDetailContainer from './../MasterDetail/MasterDetailContainer';\r\nimport StarshipListItem from './StarshipListItem';\r\nimport StarshipPanel from './StarshipPanel';\r\n\r\nfunction StarshipContainer(props) {\r\n    return (\r\n        <MasterDetailContainer\r\n            {...props}\r\n            startingUrl=\"https://swapi.co/api/starships\"\r\n            panelComponent={StarshipPanel}\r\n            listItemComponent={StarshipListItem}\r\n        />\r\n    )\r\n}\r\n\r\nexport default StarshipContainer;","import React from 'react';\r\n\r\nconst companiesList = {\r\n    'Kuat': 'kuat',\r\n    'Sienar': 'sienar',\r\n    'Corellian': 'corellia',\r\n    'Corellia': 'corellia',\r\n    'Imperial': 'imperial',\r\n    'Koensayr': 'koensayr',\r\n    'Incom': 'incom',\r\n    'Calamari': 'mon-calamari',\r\n    'Slayne': 'slayn-korpil',\r\n    'Korpil': 'slayn-korpil',\r\n    'Theed': 'theed',\r\n    'Rendili': 'rendili',\r\n    'Gallofree': 'gallofree',\r\n    'Hoersch-Kessel': 'hoersch-kessel',\r\n    'Kessel': 'hoersch-kessel',\r\n    'Rothana': 'rothana',\r\n    'Huppla': 'huppla-pasa',\r\n    'SoroSuub': 'soro-suub',\r\n    'Bespin': 'bespin'\r\n};\r\n\r\nfunction VehiclePanel(props) {\r\n    let vehicle = props.item;\r\n    let company = getCompany(vehicle.manufacturer);\r\n    return (\r\n        <div className='panel vehicle-panel' id='selected-item'>\r\n            \r\n            <div className='front'>\r\n                <div className=\"menu\">\r\n                    <button onClick={props.deselectItem}>Back</button>\r\n                    <button onClick={props.toggleDetails}>Flip</button>\r\n                </div>\r\n                <div className=\"front-content\">\r\n                    {company !== '' ?\r\n                        <img \r\n                            className=\"company-logo\" \r\n                            src={process.env.PUBLIC_URL + '/assets/images/company-logos/' + company + '.png'} \r\n                            alt=\"Company logo\" \r\n                        /> :\r\n                        null\r\n                    }\r\n                    <h2 className=\"planet-name-front\">{vehicle.name}</h2>\r\n                </div>\r\n            </div>\r\n            <div className={`back`}>\r\n                <div className=\"menu\">\r\n                    <button onClick={props.deselectItem}>Back</button>\r\n                    <button onClick={props.toggleDetails}>Flip</button>\r\n                </div>\r\n                <div className=\"back-content\">\r\n                    <h5>{vehicle.name}</h5>\r\n                    <p>Model: {vehicle.model}</p>\r\n                    <p>Class: {vehicle.vehicle_class}</p>\r\n                    <p>Manufacturer: {vehicle.manufacturer}</p>\r\n                    <p>Length: {vehicle.length}m</p>\r\n                    <p>Crew: {vehicle.crew} poeple</p>\r\n                    <p>Passengers: {vehicle.passengers} people</p>\r\n                    <p>Atmospheric Speed: {vehicle.max_atmosphering_speed}</p>\r\n                    <p>Cargo Capacity: {vehicle.cargo_capacity} kg</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction getCompany(companies) {\r\n    let classString = '';\r\n\r\n    companies.split(/, | /).some(company => {\r\n        if(companiesList[company]) {\r\n            classString = companiesList[company];\r\n            return true;\r\n        }\r\n        return false;\r\n    });\r\n\r\n    return classString;\r\n}\r\n\r\nexport default VehiclePanel;","import React from 'react';\r\nimport './../Lists/ListItem.scss';\r\n\r\nfunction StarshipListItem(props) {\r\n    let item = props.item;\r\n    return (\r\n        <div key={item.url} onClick={e => props.selectItem(e, item.url)} className=\"list-item\">\r\n            <h3>{item.name}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default StarshipListItem;","import React from 'react';\r\n\r\nimport MasterDetailContainer from './../MasterDetail/MasterDetailContainer';\r\n\r\nimport VehiclePanel from './VehiclePanel';\r\nimport SimpleListItem from './../Lists/SimpleListItem';\r\n\r\nfunction VehicleContainer(props) {\r\n    return (\r\n        <div className=\"vehicle-container\">\r\n            <MasterDetailContainer \r\n                {...props} \r\n                startingUrl=\"https://swapi.co/api/vehicles\"\r\n                panelComponent={VehiclePanel}\r\n                listItemComponent={SimpleListItem}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default VehicleContainer;","import React from 'react';\r\n\r\nimport './SpeciesPanel.scss';\r\n\r\nfunction SpeciesPanel (props) {\r\n    let speciesData = props.item;\r\n    return (\r\n        <div className='panel planet-panel' id='selected-item'>\r\n            \r\n            <div className='front'>\r\n                <div className=\"menu\">\r\n                    <button onClick={props.deselectItem}>Back</button>\r\n                    <button onClick={props.toggleDetails}>Flip</button>\r\n                </div>\r\n                <div className=\"front-content\">\r\n                    <img \r\n                        src={process.env.PUBLIC_URL + '/assets/images/species/' + formatSpeciesName(speciesData.name) + '.jpg'} \r\n                        alt=\"Species portrait\"\r\n                    />\r\n                    <h2 className=\"planet-name-front\">{speciesData.name}</h2>\r\n                </div>\r\n            </div>\r\n            <div className='back'>\r\n                <div className=\"menu\">\r\n                    <button onClick={props.deselectItem}>Back</button>\r\n                    <button onClick={props.toggleDetails}>Flip</button>\r\n                </div>\r\n                <div className=\"back-content\">\r\n                    <h5>{speciesData.name}</h5>\r\n                    <p>Classification: {speciesData.classification}</p>\r\n                    <p>Designation: {speciesData.designation}</p>\r\n                    <p>Average Height: {speciesData.average_height}cm</p>\r\n                    <p>Average Lifespan: {speciesData.average_lifespan} years</p>\r\n                    <p>Eye Color(s): {speciesData.eye_colors}</p>\r\n                    <p>Hair Color(s): {speciesData.hair_colors}</p>\r\n                    <p>Skin Color(s): {speciesData.skin_colors}</p>\r\n                    <p>Language: {speciesData.language}</p>\r\n                    <p>Homeworld: {speciesData.homeworld}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction formatSpeciesName(original) {\r\n    let species = original.replace(/'s|'| |species/g, '');\r\n    console.log(species);\r\n    return species;\r\n}\r\n\r\nexport default SpeciesPanel;","import React from 'react';\r\n\r\n//Mpdels\r\nimport MasterDetailContainer from './../MasterDetail/MasterDetailContainer';\r\nimport SpeciesPanel from './SpeciesPanel';\r\nimport SimpleListItem from './../Lists/SimpleListItem';\r\n\r\n//CSS\r\n\r\nfunction SpeciesContainer(props) {\r\n    return (\r\n        <MasterDetailContainer\r\n            {...props}\r\n            startingUrl=\"https://swapi.co/api/species\"\r\n            panelComponent={SpeciesPanel}\r\n            listItemComponent={SimpleListItem}\r\n        />\r\n    )\r\n}\r\n\r\nexport default SpeciesContainer;","import React from 'react';\r\n\r\nimport './PeoplePanel.scss';\r\n\r\nfunction PeoplePanel (props) {\r\n    let person = props.item;\r\n    return (\r\n        <div className='panel planet-panel' id='selected-item'>\r\n            \r\n            <div className='front'>\r\n                <div className=\"menu\">\r\n                    <button onClick={props.deselectItem}>Back</button>\r\n                    <button onClick={props.toggleDetails}>Flip</button>\r\n                </div>\r\n                <div className=\"front-content\">\r\n                    <h3 className=\"planet-name-front\">{person.name}</h3>\r\n                </div>\r\n            </div>\r\n            <div className='back'>\r\n                <div className=\"menu\">\r\n                    <button onClick={props.deselectItem}>Back</button>\r\n                    <button onClick={props.toggleDetails}>Flip</button>\r\n                </div>\r\n                <div className=\"back-content\">\r\n                    <h5>{person.name}</h5>\r\n                    <p>Birth Year: {person.birth_year}</p>\r\n                    <p>Eye Color: {person.eye_color}</p>\r\n                    <p>Gender: {person.gender}</p>\r\n                    <p>Height: {person.height}cm</p>\r\n                    <p>Weight: {person.mass}kg</p>\r\n                    <p>Skin Color {person.skin_color}</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PeoplePanel;","import React from 'react';\r\n\r\n//Mpdels\r\nimport MasterDetailContainer from './../MasterDetail/MasterDetailContainer';\r\nimport PeoplePanel from './PeoplePanel';\r\nimport SimpleListItem from './../Lists/SimpleListItem';\r\n\r\n//CSS\r\n\r\nfunction PeopleContainer(props) {\r\n    return (\r\n        <MasterDetailContainer\r\n            {...props}\r\n            startingUrl=\"https://swapi.co/api/people\"\r\n            panelComponent={PeoplePanel}\r\n            listItemComponent={SimpleListItem}\r\n        />\r\n    )\r\n}\r\n\r\nexport default PeopleContainer;","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport './App.scss';\r\n\r\nimport NavBar from './Components/NavBar/NavBar';\r\nimport Welcome from './Components/Welcome/Welcome';\r\nimport PlanetContainer from './Components/Planets/PlanetContainer';\r\nimport StarshipContainer from './Components/Starships/StarshipContainer';\r\nimport VehicleContainer from './Components/Vehicles/VehicleContainer';\r\nimport SpeciesContainer from './Components/Species/SpeciesContainer';\r\nimport PeopleContainer from './Components/People/PeopleContainer';\r\n\r\nfunction App(props) {\r\n  return (\r\n    <div className=\"App\">\r\n      <div className=\"navbar-content\">\r\n        <NavBar {...props} />\r\n      </div>\r\n      <div className=\"main-content\">\r\n        <Route exact path =\"/\" render={props => <Welcome {...props} />} />\r\n        <Route exact path=\"/planets\" render={props => <PlanetContainer {...props} />} />\r\n        <Route exact path=\"/starships\" render={props => <StarshipContainer {...props} />} />\r\n        <Route exact path=\"/vehicles\" render={props => <VehicleContainer {...props} /> } />\r\n        <Route exact path=\"/species\" render={props => <SpeciesContainer {...props} />} />\r\n        <Route exact path=\"/people\" render={props => <PeopleContainer {...props} /> } />\r\n      </div>\r\n      \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n<BrowserRouter>\r\n    <App />\r\n</BrowserRouter>\r\n, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}